{"version":3,"sources":["navbar.js","date-time.js","world_clock.js","header.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["Navba","props","toggleNav","bind","state","isNavOpen","this","setState","className","Navbar","dark","expand","NavbarBrand","href","activeClass","to","spy","smooth","offset","duration","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","Component","DateTime","id","location","day_week","day","month","year","hrs","min","sec","WorldClock","options","onChange","value","placeholder","dbDay","dbday_date","months","years","hours","minutes","seconds","Header","src","alt","Footer","axios","require","App","selectedOption","handleChange","console","log","handleClick","setInterval","post","selected","then","response","data","dbMonth","dbyear","dbDayDate","catch","error","loc","fetch","json","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b02acc67.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/navbar.css\";\nimport { Link } from \"react-scroll\";\n\nclass Navba extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n          isNavOpen: false\n        };\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n\n    render() {\n  return (\n    <div className=\"main_banner sticky-top row\">\n\n                <Navbar dark expand=\"md\" className=\"navbar p-3 navbar-dark transparent-nav nav-js col-sm-12\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><Link className=\"navbar-brand\" href=\"/\" activeClass=\"active\"\n                        to=\"home\"\n                        spy={true}\n                        smooth={true}\n                        offset={-200}\n                        duration={500}>\n                          CLOCK\n                        </Link>\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                            <Link className=\"nav-item nav-link\" activeClass=\"active\"\n                            to=\"date_time\"\n                            spy={true}\n                            smooth={true}\n                            offset={-200}\n                            duration={500}>\n                              Home <span className=\"sr-only\">(current)</span>\n                            </Link>\n                            </NavItem>\n                            <NavItem>\n                            <Link\n                            className=\"nav-item nav-link\"\n                              activeClass=\"active\"\n                              to=\"date_time\"\n                              spy={true}\n                              smooth={true}\n                              offset={-70}\n                              duration={500}\n                            >Indian Time</Link>\n                            </NavItem>\n                            <NavItem>\n                            <Link\n                            className=\"nav-item nav-link\"\n                              activeClass=\"active\"\n                              to=\"world_clock\"\n                              spy={true}\n                              smooth={true}\n                              offset={-70}\n                              duration={500}\n                            >World Clock</Link>\n                            </NavItem>\n\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n\n    </div>\n  );\n}\n}\n\nexport default Navba;\n","import React from \"react\";\nimport \"./css/date-time.css\";\n\nfunction DateTime(props) {\n  return (\n    <div id=\"date_time\" className=\"row\">\n    <div className=\"date col-sm-12\" >\n      <h1>{props.location}</h1>\n      <h1>{props.day_week}, {props.day} {props.month} {props.year}</h1>\n    </div>\n    <div className=\"time col-sm-12\">\n    <div className='container'>\n      <h1 className=''>{props.hrs}:{props.min}<span>{props.sec}</span></h1>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default DateTime;\n","import React from \"react\";\n\nimport Dropdown from 'react-dropdown';\nimport \"./css/dropdown.css\"\nimport \"./css/world_clock.css\";\nimport { GiWorld } from \"react-icons/gi\";\n\nfunction WorldClock(props) {\n  return (\n    <div id=\"world_clock\" className=\"row\">\n      <div className=\"worldClockHeader col-xl-12 col-sm-12\">\n       <h1><GiWorld className=\"earth\" /> WORLD CLOCK</h1>\n      </div>\n        <div id=\"date_time\" className=\"col-sm-12\">\n        <div className='Select col-xl-12'>\n        <Dropdown\n\n        className='myClassName'\n        options={props.options}\n        onChange={props.onChange}\n        value={props.value}\n        placeholder=\"Select a location\" />\n        </div>\n\n        <div className=\"col-xl-12\">\n        <button className=\"button\" onClick={props.onClick} >\n              Submit\n        </button>\n        </div>\n              <div className=\"date_2 col-xl-12\">\n                <h1>{props.location}</h1>\n                <h1>{props.dbDay}, {props.dbday_date} {props.months} {props.years}</h1>\n              </div>\n              <div className=\"time col-xl-12\">\n                <h1>{props.hours}:{props.minutes}<span>{props.seconds}</span></h1>\n              </div>\n        </div>\n    </div>\n  );\n}\n\nexport default WorldClock;\n","import React from \"react\";\nimport \"./css/header.css\";\n\nfunction Header() {\n  return (\n\n    <section id=\"home\" className=\"row\">\n     <div className=\"col-sm-12\">\n        <h1><img src=\"https://img.icons8.com/ios-filled/50/000000/india-map.png\" alt=\"error in img uploading\" />Life is Nothing But <span>Time</span></h1>\n      </div>\n    </section>\n\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport \"./css/footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"copyrightline\">\n    \t\t\t\t\t<p>© 2020 All Rights Reserved. Copyright by : <a href=\"https://www.worldtimeapi.org\">worldtimeapi</a></p>\n    </div>\n  );\n}\nexport default Footer;\n","import React, {Component} from 'react';\nimport { BrowserRouter } from \"react-browser-router\";\nimport Navba from \"./navbar\";\nimport DateTime from \"./date-time\";\nimport WorldClock from \"./world_clock\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nconst axios = require('axios');\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data: null,\n      hrs: null,\n      min: null,\n      sec: null,\n      day_week:null,\n      day: null,\n      month:null,\n      year: null,\n      loc:null,\n    }\n    this.state={\n      location:null,\n      hours:[\"hr\"],\n      minutes:[\"min\"],\n      seconds:[\"Sec\"],\n      dbDay:[\"Todays\"],\n      months:null,\n      years:[\"Date\"],\n      dbday_date:null,\n    }\n  };\n  state = {\n    selectedOption: null,\n  };\n\n  componentDidMount(){\n    //fetch list of all location from node server\n    fetch(\"http://localhost:5000/\")\n    .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          this.setState({data: data})\n        })\n\nsetInterval(() =>\n//fetch date and time of INDIA/KOlKATA from node server\n        fetch(\"http://localhost:5000/india\")\n        .then(response => {\n              return response.json();\n            })\n        .then(data => {\n          this.setState({loc: data.location})\n          this.setState({hrs: data.hours})\n          this.setState({min: data.minutes})\n          this.setState({sec: data.seconds})\n          this.setState({day_week: data.dbDay})\n          this.setState({day: data.dbDayDate})\n          this.setState({month: data.dbMonth})\n          this.setState({year: data.dbyear})\n  })\n, 1000);\n  };\n//handle selection of an location\n    handleChange = selectedOption => {\n      this.setState(\n        { selectedOption },\n        () => console.log(`Option selected:`, this.state.selectedOption)\n      );\n    };\n\n//handle selected location from Selector\n    handleClick = () => {\n  //    console.log('this is:', this.state.selectedOption);\nsetInterval(() =>\n//fetch date and time from node server by using selected location\n      axios.post(\"http://localhost:5000/world\", {\n      selected: this.state.selectedOption,\n    })\n    .then((response) =>{\n    this.setState({location: response.data.location})\n    this.setState({hours: response.data.hours})\n    this.setState({minutes: response.data.minutes})\n    this.setState({seconds: response.data.seconds})\n    this.setState({dbDay: response.data.dbDay})\n    this.setState({months: response.data.dbMonth})\n    this.setState({years: response.data.dbyear})\n    this.setState({dbday_date: response.data.dbDayDate})\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n, 1000);\n  };\n\n  render(){\n    const { selectedOption } = this.state;\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Header />\n      <Navba />\n      <DateTime\n      location={this.state.loc}\n      day_week={this.state.day_week}\n      day={this.state.day}\n      month={this.state.month}\n      year={this.state.year}\n      hrs={this.state.hrs}\n      min={this.state.min}\n      sec={this.state.sec}\n       />\n\n       <WorldClock\n       location={this.state.location}\n       dbDay={this.state.dbDay}\n       dbday_date={this.state.dbday_date}\n       months={this.state.months}\n       years={this.state.years}\n       hours={this.state.hours}\n       minutes={this.state.minutes}\n       seconds={this.state.seconds}\n\n       options={this.state.data}\n       onChange={this.handleChange}\n       value={selectedOption}\n       onClick={this.handleClick}\n       />\n\n      <Footer />\n    </div>\n    </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}